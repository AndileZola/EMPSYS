@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}
<title>DevExtreme Demo</title>
<meta http-equiv="X-UA-Compatible" content="IE=edge" />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0" />
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
<script>window.jQuery || document.write(decodeURIComponent('%3Cscript src="js/jquery.min.js"%3E%3C/script%3E'))</script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/cldrjs/0.4.4/cldr.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/cldrjs/0.4.4/cldr/event.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/cldrjs/0.4.4/cldr/supplemental.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/cldrjs/0.4.4/cldr/unresolved.min.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/globalize/1.1.1/globalize.min.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/globalize/1.1.1/globalize/message.min.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/globalize/1.1.1/globalize/number.min.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/globalize/1.1.1/globalize/currency.min.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/globalize/1.1.1/globalize/date.min.js"></script>
<link rel="stylesheet" type="text/css" href="https://cdn3.devexpress.com/jslib/19.1.4/css/dx.common.css" />
<link rel="stylesheet" type="text/css" href="https://cdn3.devexpress.com/jslib/19.1.4/css/dx.light.css" />
<script src="https://cdn3.devexpress.com/jslib/19.1.4/js/dx.all.js"></script>
<div class="text-center">
		<div id="gridContainer"></div>
</div>

<script>
    var empData = new DevExpress.data.CustomStore({
        key: "employeeId",
        load: function (loadOptions) {
            return $.ajax({
                url: "/api/Employees",
                method: "GET"
            });
        },
        insert: function (values) {},
						update: function (key, values)
						{
								var newValues = JSON.parse(UpdateBundleValues);
								return $.ajax({
												url: "/Quote/UpdateBundle",
										data: { "employeeId": newValues.BundleId, "bundleSize": newValues.BundleSize, "bundleName": newValues.BundleName, "bundleDescription": newValues.BundleDescription},
										method: "POST",
										success: function (data) {
												var result = (data === "Saved") ? true : false;
												if (result) {
																ToastMessage(result, "The bundle was modified successfully!!!!");
												} else {
																ToastMessage(result, "Opps!!!! Modifying the bundle failed");
												}
										}
								});
						},
						remove: function (key) {																						
								return $.ajax({
										url: "/Quote/DeleteBundle",
										data: { "bundleId": encodeURIComponent(key)},
										method: "POST",
										success: function (data)
										{
												var result = (data === "Deleted") ? true : false;
												if (result) {
																ToastMessage(result, "The bundle was deleted successfully!!!!");
												} else{
														ToastMessage(result, "Opps!!!! Deleting bundle failed");
												}																																																											
										}
								});
						}        
		});

		$(document).ready(function () {				
        $("#gridContainer").dxDataGrid({
            dataSource: empData,
            paging: {
                pageSize: 10
            },
            pager: {
                showPageSizeSelector: true,
                allowedPageSizes: [10, 25, 50, 100]
            },
            remoteOperations: false,
            searchPanel: {
                visible: true,
                highlightCaseSensitive: true
            },
            groupPanel: { visible: true },
            grouping: {
                autoExpandAll: false
						},
						editing: {
            allowUpdating: true, 
            allowAdding: true, 
						allowDeleting: true,
					  mode: 'form',
						},
						columns:
						[
								{ dataField: "employeeId", caption: "Employee Id", allowEditing: false, formItem: { visible: false } },
								{ dataField: "firstName", caption: "First Name", allowEditing: false },
								{ dataField: "lastName", caption: "Last Name", allowEditing: false },
								{ dataField: "role1", caption: "Role", allowEditing: true, formItem: { visible: true },
										editCellTemplate: function (cellElement, cellInfo) {
												var div = document.createElement("div");
												$(div).appendTo(cellElement).dxSelectBox({
														dataSource: "/Api/Role",
														valueExpr: 'roleId',
														displayExpr: 'role1',
														value: cellInfo.data.roleId,
														onContentReady: function(e){
																alert(cellInfo.data.role1);
														},
														onValueChanged: (e) => {
																cellInfo.value  = e.text;
																$RoleId = e.value;																																			
														}
												});
										}
								},{
										dataField: "assignedTasks", caption: "Assigned Tasks", allowEditing: true, formItem: { visible: true },
										cellTemplate: function (cellElement, cellInfo) {
												var div = document.createElement("div");
														$(div).appendTo(cellElement).dxTagBox({
																dataSource: "/Api/GetTasks",
																valueExpr: 'taskId',
																displayExpr: 'task1',
																value:cellInfo.data.assignedTasks
																//onValueChanged: (e) => {
																//		cellInfo.value  = e.text;
																//		$assignedTasks = e.value;			
																//}
														});
												},
												editCellTemplate: function (cellElement, cellInfo) {
														var div = document.createElement("div");
														$(div).appendTo(cellElement).dxTagBox({
																dataSource: "/Api/GetTasks",
																valueExpr: 'taskId',
																displayExpr: 'task1',
																onValueChanged: (e) => {
																		cellInfo.value  = e.text;
																		$assignedTasks = e.value;																			
																		//var dataGrid = $("#gridContainer").dxDataGrid("instance");
																		//dataGrid.cellValue(cellInfo.row.rowIndex, "task1", "e.value");
																		//dataGrid.saveEditData();
																}
																//onValueChanged: (e) => { $_userTypeId = e.value; }
														});
												}
								}
						],
            allowColumnReordering: true,
            rowAlternationEnabled: true,
            showBorders: true,
            onContentReady: function (e) {
                $("#gridContainer").dxDataGrid('columnOption', 'employeeId', 'visible', false);
            }
        });
    });
</script>
