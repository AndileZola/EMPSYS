@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}
<title>DevExtreme Demo</title>
<meta http-equiv="X-UA-Compatible" content="IE=edge" />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0" />
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
<script>window.jQuery || document.write(decodeURIComponent('%3Cscript src="js/jquery.min.js"%3E%3C/script%3E'))</script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/cldrjs/0.4.4/cldr.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/cldrjs/0.4.4/cldr/event.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/cldrjs/0.4.4/cldr/supplemental.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/cldrjs/0.4.4/cldr/unresolved.min.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/globalize/1.1.1/globalize.min.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/globalize/1.1.1/globalize/message.min.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/globalize/1.1.1/globalize/number.min.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/globalize/1.1.1/globalize/currency.min.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/globalize/1.1.1/globalize/date.min.js"></script>
<link rel="stylesheet" type="text/css" href="https://cdn3.devexpress.com/jslib/19.1.4/css/dx.common.css" />
<link rel="stylesheet" type="text/css" href="https://cdn3.devexpress.com/jslib/19.1.4/css/dx.light.css" />
<script src="https://cdn3.devexpress.com/jslib/19.1.4/js/dx.all.js"></script>
<div class="text-center">
		<div id="gridtabs"></div>
		<div id="empgrid"></div>
		<div id="taskgrid"></div>
		<div id="rolegrid"></div>
		<div id="notification"></div>
</div>

<script>
    var empData = new DevExpress.data.CustomStore({
        key: "employeeId",
        load: function (loadOptions) {
            return $.ajax({
                url: "/api/GetEmployees",
                method: "GET"
            });
        },
				insert: function (values) {
						let _data = { "RoleId": $RoleId, "FirstName": values.firstName, "LastName": values.lastName, "EmployeeTasks": $assignedTasks };
						return $.ajax({
								url: "api/AddEmployee",
								contentType: 'application/json;charset=utf-8',
								data: JSON.stringify(_data),
								type: "POST",						
								success: function (result) {
										let _notification = result ? "New Employee was successfully added" : "Opps!!!! Failed to add new Employee";
										ToastMessage(result, _notification);
								}
								});
				},
				update: function (key, values)
				{
						//alert(values);
						let _rowIndex = $("#empgrid").dxDataGrid("instance").getRowIndexByKey(key);
						let rows = $("#empgrid").dxDataGrid("instance").getVisibleRows();
						let row = rows[_rowIndex];
						//console.log(JSON.stringify(row.data));			
						//console.log(JSON.stringify(values));
						var selectedEmployee = JSON.parse(JSON.stringify(values));
						//internalPriceData.CategoryId = $_serviceTypeId;	
						var newValues = row.data;
						_data = { "EmployeeId":key,"RoleId": $RoleId, "FirstName": newValues.firstName, "LastName": newValues.lastName, "EmployeeTasks": $assignedTasks };
						console.log(JSON.stringify(_data));		
						 //newValues.Rvalues.firstName
						return $.ajax({
								url: "/api/UpdateEmployee",
								contentType: 'application/json;charset=utf-8',
								data: JSON.stringify(_data),
								type: "POST",
								success: function (result) {
										let _notification = result ? "Employee was successfully updated" : "Opps!!!! Failed to update the Employee";
										ToastMessage(result, _notification);
								}
						});
				},
				remove: function (key) {																						
						return $.ajax({
								url: "/Quote/DeleteBundle",
								data: { "bundleId": encodeURIComponent(key)},
								method: "POST",
								success: function (data)
								{
										var result = (data === "Deleted") ? true : false;
										if (result) {
														ToastMessage(result, "The bundle was deleted successfully!!!!");
										} else{
												ToastMessage(result, "Opps!!!! Deleting bundle failed");
										}																																																											
								}
						});
				}        
		});

		$(document).ready(function () {			
				$('#gridtabs').dxTabs({
						dataSource: [
								{
										id: 0,
										text: "EMPLOYEES",
										icon: "user"
								}, {
										id: 1,
										text: "ROLES",
										icon: "money"
								},{
										id: 1,
										text: "TASKS",
										icon: "folder"
								}
						],
						selectedIndex: 0,
						onItemClick: function (e) {							
								if (e.itemData.id == 0) {
                    $("#empgrid").show();
                } else {
                    $("#empgrid").hide();
                }
            }
				});

        $("#empgrid").dxDataGrid({
            dataSource: empData,
            paging: {
                pageSize: 10
            },
            pager: {
                showPageSizeSelector: true,
                allowedPageSizes: [10, 25, 50, 100]
            },
            remoteOperations: false,
            searchPanel: {
                visible: true,
                highlightCaseSensitive: true
            },
            groupPanel: { visible: true },
            grouping: {
                autoExpandAll: false
						},
						editing: {
            allowUpdating: true, 
            allowAdding: true, 
						allowDeleting: true,
					  mode: 'form',
						},
						columns:
						[
								{ dataField: "employeeId", caption: "Employee Id", allowEditing: false, formItem: { visible: false } },
								{ dataField: "firstName", caption: "First Name", allowEditing: true },
								{ dataField: "lastName", caption: "Last Name", allowEditing: true },
								{ dataField: "role.role1", caption: "Role", allowEditing: true,
									editCellTemplate: function (cellElement, cellInfo) {
												var div = document.createElement("div");
												$(div).appendTo(cellElement).dxSelectBox({
														dataSource: "/Api/Role",
														valueExpr: 'roleId',
														displayExpr: 'role1',
													  //value: cellInfo.data.role.roleId,
														onContentReady: function(e){
																//alert(cellInfo.data.role.role1);
																//this.value = 
														},
														onValueChanged: (e) => {
																cellInfo.value  = e.text;
																$RoleId = e.value;
																//cellInfo.data.role.roleId = e.value;
																//alert(e.value);
														}
												});
										}
								},{
										dataField: "assignedTasks", caption: "Assigned Tasks", allowEditing: true,
										cellTemplate: function (cellElement, cellInfo) {
												var div = document.createElement("div");
														$(div).appendTo(cellElement).dxTagBox({
																dataSource: "/Api/GetTasks",
																valueExpr: 'taskId',
																displayExpr: 'task1',
																value:cellInfo.data.assignedTasks,
																onValueChanged: (e) => {
																		//cellInfo.value  = e.text;
																		$assignedTasks = e.value;			
																}
														});
												},
										editCellTemplate: function (cellElement, cellInfo) {
														var div = document.createElement("div");
														$(div).appendTo(cellElement).dxTagBox({
																dataSource: "/Api/GetTasks",
																valueExpr: 'taskId',
																displayExpr: 'task1',
																value:cellInfo.data.assignedTasks,
																onValueChanged: (e) => {
																		cellInfo.value  = e.text;
																		$assignedTasks = e.value;																			
																		//var dataGrid = $("#gridContainer").dxDataGrid("instance");
																		//dataGrid.cellValue(cellInfo.row.rowIndex, "task1", "e.value");
																		//dataGrid.saveEditData();
																}
																//onValueChanged: (e) => { $_userTypeId = e.value; }
														});
												}
								}
						],
            allowColumnReordering: true,
            rowAlternationEnabled: true,
            showBorders: true,
            onContentReady: function (e) {
                $("#gridContainer").dxDataGrid('columnOption', 'employeeId', 'visible', false);
						},
						visible: true
				});				
		});
		function ToastMessage(result, message) {
				$("#notification").dxToast({
						"type": result ? "success" : "error",
						"displayTime": 3000,
						"message": message,
						"visible": true
				});
}
</script>
